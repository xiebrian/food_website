# Generated by Django 2.1.7 on 2019-05-17 01:29

import cookbook.models
import datetime
from django.db import migrations, models
import image_cropping.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuisine_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, upload_to=cookbook.models.picture_file_name)),
                ('cropping', image_cropping.fields.ImageRatioField('picture', '2000x2000', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='cropping')),
                ('desc_summary', models.TextField(blank=True, default='', verbose_name='Description Summary')),
                ('text_ingred', models.TextField(blank=True, default='', verbose_name='Ingredients List')),
                ('instructions', models.TextField(blank=True, default='', verbose_name='Instructions')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Notes and Tips')),
                ('personal_log', models.TextField(blank=True, default='', verbose_name='Personal Notes')),
                ('cooking_time', models.DurationField(default=datetime.timedelta(0))),
                ('total_time', models.DurationField(default=datetime.timedelta(0))),
                ('last_cook_time', models.DateField()),
                ('number_of_attempts', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '>3')], default=0)),
                ('is_experiment', models.BooleanField(default=False)),
                ('feature_position', models.IntegerField(default=0)),
                ('url_name', models.SlugField(unique=True)),
                ('categories', models.ManyToManyField(blank=True, to='cookbook.Category')),
                ('cuisines', models.ManyToManyField(blank=True, to='cookbook.Cuisine')),
                ('ingredients', models.ManyToManyField(blank=True, to='cookbook.Ingredient')),
            ],
        ),
    ]
